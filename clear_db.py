import argparse
from flask import Flask
from app.extensions import db
from app import models

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///app.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db.init_app(app)

def clear_model_data(model_name: str):
    """Vide uniquement la table du mod√®le donn√©."""
    with app.app_context():
        # V√©rifie si le mod√®le existe dans app.models
        model_class = getattr(models, model_name, None)
        if model_class is None:
            print(f"‚ùå Mod√®le '{model_name}' introuvable dans app.models.")
            return

        # Vide la table correspondante
        table = model_class.__table__
        print(f"üßπ Vidage de la table '{table.name}' associ√©e au mod√®le '{model_name}'...")
        db.session.execute(table.delete())
        db.session.commit()
        print(f"‚úÖ Table '{table.name}' vid√©e avec succ√®s !")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Vider une table sp√©cifique du mod√®le Flask.")
    parser.add_argument("-m", "--model", required=True, help="Nom du mod√®le √† vider (ex: Recipe)")
    args = parser.parse_args()

    clear_model_data(args.model)
